name: build

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Check out source code
        uses: actions/checkout@v4

      - name: Set up Go
        id: setup-go
        uses: actions/setup-go@v4
        with:
          go-version-file: go.mod
          check-latest: true

      - name: Set up Chrome
        uses: browser-actions/setup-chrome@latest

      - name: Run lint
        uses: reviewdog/action-golangci-lint@v2
        with:
          fail_on_error: true
          golangci_lint_flags: --timeout=5m

      - name: Run gostyle
        uses: k1LoW/gostyle-action@v1
        with:
          config-file: .gostyle.yml
          fail-on-error: true

      - name: Run govulncheck
        uses: golang/govulncheck-action@v1
        with:
           go-version-input: '${{ steps.setup-go.outputs.go-version }}'
           check-latest: true
           go-package: ./...

      - name: Run tests
        run: make ci

      - name: Run octocov
        uses: k1LoW/octocov-action@v0
  os-test:
    name: Run on each OS
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Check out source code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: go.mod
          cache: true

      - name: Run runbook
        run: go run ./cmd/runn/main.go run ./testdata/book/github.yml
        shell: bash
